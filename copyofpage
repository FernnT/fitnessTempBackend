
import { useEffect, useState } from 'react'
import  axios  from 'axios'
import './App.css'
///////////////////////// Types //////////////////////////
interface Exercise { //TODO: Add more properties as needed
  id: number;
  name: string;
  difficulty: string;
}
interface WorkoutPlan {
  user_id: number;
  exercises: Exercise[];
  name: string;
  level: string;
  duration_days: number;
  goal: string;
  progress: number;
  start_date: Date;
  end_date: Date;
}
///////////////////////// Types //////////////////////////

//THIS IS JUST TEMP TO TEST THE API'S
function App() {
  const [exercises, setExercises] = useState([])
  const [workoutPlan, setWorkoutPlan] = useState<WorkoutPlan | undefined>(undefined)
  const [selectedExercisesArr, setSelectedExercisesArr] = useState<Exercise[]>([])
  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(null);
  const [inputs, setInputs] = useState({ km: '', time: '', kg: '', reps: '' });
  
///////////////////////// Fetch Exercises //////////////////////////
  useEffect(() => {
  const fetchData = async () => {
    try {
      const results = await axios.get('http://localhost:3000/exercise/getExercises');
      console.log(results.data);
      setExercises(results.data);
    } catch (err) {
      console.log(err);
    }
  };
  fetchData();
}, [])
///////////////////////// Fetch Exercises //////////////////////////

///////////////////////// Styles //////////////////////////
const exerciseStyle = {
  padding: '10px',
  margin: '5px',
  border: '1px solid #ccc',
  borderRadius: '5px',
  cursor: 'pointer',
  backgroundColor: '#060270'
};
///////////////////////// Styles //////////////////////////

///////////////////////// FUNCTIONS //////////////////////////
const handleClick = (exercise: Exercise) => {
  setSelectedExercise(exercise);
  setInputs({ km: '', time: '', kg: '', reps: '' }); // Reset inputs
  
};

const handleInputChange = (e) => {
  const { name, value } = e.target;
  setInputs((prevInputs) => ({ ...prevInputs, [name]: value }));
};

const createWorkoutPlan = () =>{
  const workoutPlan = {
    user_id: 1,
    exercises: selectedExercisesArr,
    name: 'My Workout Plan', //The user should set this. THis is just a test
    intesity: 'High',      //The user should set this. THis is just a test or maybe we can set it based on the exercises selected
    duration_days: 30,      ////The user should set this. THis is just a test
    goal: 'Weight Loss',    //The user should set this. THis is just a test
    progress: 0,            //This should be set to 0 when the workout plan is created
    start_date: new Date(), //The user should set this. THis is just a test
    end_date: new Date(),    //This should be set to the current date + duration_days when the workout plan is created
    completed: false        //This should be set to false when the workout plan is created
  }
  setWorkoutPlan(workoutPlan);
  console.log('Workout Plan created:', workoutPlan);
}

const addExerciseToPlan = () => {
  if (selectedExercise) {
    const exerciseWithInputs = {
      ...selectedExercise,
      ...inputs
    };

    setSelectedExercisesArr((prev) => {
      const updatedExercises = [...prev, exerciseWithInputs];
      console.log('Exercise added to plan:', updatedExercises);
      return updatedExercises;
    });

    setSelectedExercise(null); // Reset selected exercise
    setInputs({ km: '', time: '', kg: '', reps: '' }); // Reset inputs
  } else {
    console.log('No exercise selected');
  }
};
///////////////////////// FUNCTIONS //////////////////////////

  return (
    <>
       <div style ={{display: 'flex'}}>
        {exercises.map((exercise, index) => (
          <div key={index} onClick={() => handleClick(exercise)} style={exerciseStyle}>
            {exercise.intensity} || {exercise.name}
            <p>{exercise.exerciseType}</p>
          </div>
        ))}
      </div>

        <div >
          <h2>Selected Exercises</h2>
          <div style={{display:'flex',flexDirection:'row'}}>
          {selectedExercisesArr.map((exercise, index) => (
            <div key={index} style={{padding: '10px', margin: '5px',gap:'50px',  border: '1px solid #ccc', borderRadius: '5px',cursor: 'pointer', backgroundColor: '#060270'}} >
              {exercise.intensity} || {exercise.name}
              <p>{exercise.exerciseType}</p>
            </div>
          ))}
          </div>
        </div>

        {selectedExercise && (
        <div>
          <h3>Enter details for {selectedExercise.name}</h3>
          {selectedExercise.exerciseType === 'Cardio' && (
            <>
              <label>
                Km:
                <input type="number" name="km" value={inputs.km} onChange={handleInputChange} required/>
              </label>
              <label>
                Time:
                <input type="number" name="time" value={inputs.time} onChange={handleInputChange} required />
              </label>
            </>
          )}
          {selectedExercise.exerciseType === 'Equipment' && (
            <>
              <label>
                Kg:
                <input type="number" name="kg" value={inputs.kg} onChange={handleInputChange}required/>
              </label>
              <label>
                Reps:
                <input type="number" name="reps" value={inputs.reps} onChange={handleInputChange} required />
              </label>
            </>
          )}
          {selectedExercise.exerciseType === 'Reps Only' && (
            <label>
              Reps:
              <input type="number" name="reps" value={inputs.reps} onChange={handleInputChange} />
            </label>
          )}
            <button onClick={addExerciseToPlan}>Add Exercise to Plan</button>
        </div>
      )}
      <button onClick={createWorkoutPlan}>Create Workout Plan</button>
    </>
  )
}

export default App
